{"ast":null,"code":"var _jsxFileName = \"G:\\\\CS218_CloudComputing\\\\quiz-app-api\\\\quiz-app-frontend\\\\src\\\\components\\\\CreateQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport API from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateQuiz = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [questions, setQuestions] = useState([{\n    text: '',\n    options: ['', '', '', ''],\n    correctAnswer: 0\n  }]);\n\n  // Handle changes to the quiz title\n  const handleTitleChange = e => {\n    setTitle(e.target.value);\n  };\n\n  // Handle changes to a specific question\n  const handleQuestionChange = (index, field, value) => {\n    const updatedQuestions = [...questions];\n    if (field === 'text') {\n      updatedQuestions[index].text = value;\n    } else if (field === 'correctAnswer') {\n      updatedQuestions[index].correctAnswer = parseInt(value);\n    }\n    setQuestions(updatedQuestions);\n  };\n\n  // Handle changes to a specific option\n  const handleOptionChange = (questionIndex, optionIndex, value) => {\n    const updatedQuestions = [...questions];\n    updatedQuestions[questionIndex].options[optionIndex] = value;\n    setQuestions(updatedQuestions);\n  };\n\n  // Add a new question\n  const addQuestion = () => {\n    setQuestions([...questions, {\n      text: '',\n      options: ['', '', '', ''],\n      correctAnswer: 0\n    }]);\n  };\n\n  // Remove a question\n  const removeQuestion = index => {\n    const updatedQuestions = questions.filter((_, i) => i !== index);\n    setQuestions(updatedQuestions);\n  };\n\n  // Submit the quiz\n  const createQuiz = async () => {\n    try {\n      await API.post('/quizzes', {\n        title,\n        questions\n      });\n      alert('Quiz created successfully!');\n      setTitle('');\n      setQuestions([{\n        text: '',\n        options: ['', '', '', ''],\n        correctAnswer: 0\n      }]);\n    } catch (error) {\n      var _error$response;\n      console.error('Error creating quiz:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      alert('Failed to create quiz.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-2xl mx-auto mt-10 p-6 bg-white shadow-md rounded\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Create Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Quiz Title\",\n      value: title,\n      onChange: handleTitleChange,\n      className: \"border p-2 w-full mb-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), questions.map((question, questionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 border p-4 rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-semibold\",\n        children: [\"Question \", questionIndex + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Question Text\",\n        value: question.text,\n        onChange: e => handleQuestionChange(questionIndex, 'text', e.target.value),\n        className: \"border p-2 w-full mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), question.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: `Option ${optionIndex + 1}`,\n          value: option,\n          onChange: e => handleOptionChange(questionIndex, optionIndex, e.target.value),\n          className: \"border p-2 w-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this)\n      }, optionIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block font-semibold mt-4\",\n        children: \"Correct Answer (0-based index):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: \"0\",\n        max: \"3\",\n        value: question.correctAnswer,\n        onChange: e => handleQuestionChange(questionIndex, 'correctAnswer', e.target.value),\n        className: \"border p-2 w-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => removeQuestion(questionIndex),\n        className: \"bg-red-500 text-white px-4 py-2 mt-4 rounded\",\n        children: \"Remove Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, questionIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addQuestion,\n      className: \"bg-blue-500 text-white px-4 py-2 rounded mb-6\",\n      children: \"Add Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createQuiz,\n      className: \"bg-green-500 text-white px-4 py-2 rounded w-full\",\n      children: \"Create Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateQuiz, \"rUy+J3g3ocHW2bW4Kd6keclSvNI=\");\n_c = CreateQuiz;\nexport default CreateQuiz;\nvar _c;\n$RefreshReg$(_c, \"CreateQuiz\");","map":{"version":3,"names":["React","useState","API","jsxDEV","_jsxDEV","CreateQuiz","_s","title","setTitle","questions","setQuestions","text","options","correctAnswer","handleTitleChange","e","target","value","handleQuestionChange","index","field","updatedQuestions","parseInt","handleOptionChange","questionIndex","optionIndex","addQuestion","removeQuestion","filter","_","i","createQuiz","post","alert","error","_error$response","console","response","data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","map","question","option","min","max","onClick","_c","$RefreshReg$"],"sources":["G:/CS218_CloudComputing/quiz-app-api/quiz-app-frontend/src/components/CreateQuiz.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport API from '../api';\r\n\r\nconst CreateQuiz = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [questions, setQuestions] = useState([\r\n    { text: '', options: ['', '', '', ''], correctAnswer: 0 },\r\n  ]);\r\n\r\n  // Handle changes to the quiz title\r\n  const handleTitleChange = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n\r\n  // Handle changes to a specific question\r\n  const handleQuestionChange = (index, field, value) => {\r\n    const updatedQuestions = [...questions];\r\n    if (field === 'text') {\r\n      updatedQuestions[index].text = value;\r\n    } else if (field === 'correctAnswer') {\r\n      updatedQuestions[index].correctAnswer = parseInt(value);\r\n    }\r\n    setQuestions(updatedQuestions);\r\n  };\r\n\r\n  // Handle changes to a specific option\r\n  const handleOptionChange = (questionIndex, optionIndex, value) => {\r\n    const updatedQuestions = [...questions];\r\n    updatedQuestions[questionIndex].options[optionIndex] = value;\r\n    setQuestions(updatedQuestions);\r\n  };\r\n\r\n  // Add a new question\r\n  const addQuestion = () => {\r\n    setQuestions([\r\n      ...questions,\r\n      { text: '', options: ['', '', '', ''], correctAnswer: 0 },\r\n    ]);\r\n  };\r\n\r\n  // Remove a question\r\n  const removeQuestion = (index) => {\r\n    const updatedQuestions = questions.filter((_, i) => i !== index);\r\n    setQuestions(updatedQuestions);\r\n  };\r\n\r\n  // Submit the quiz\r\n  const createQuiz = async () => {\r\n    try {\r\n      await API.post('/quizzes', { title, questions });\r\n      alert('Quiz created successfully!');\r\n      setTitle('');\r\n      setQuestions([{ text: '', options: ['', '', '', ''], correctAnswer: 0 }]);\r\n    } catch (error) {\r\n      console.error('Error creating quiz:', error.response?.data || error.message);\r\n      alert('Failed to create quiz.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-2xl mx-auto mt-10 p-6 bg-white shadow-md rounded\">\r\n      <h2 className=\"text-xl font-bold mb-4\">Create Quiz</h2>\r\n\r\n      {/* Quiz Title */}\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Quiz Title\"\r\n        value={title}\r\n        onChange={handleTitleChange}\r\n        className=\"border p-2 w-full mb-4\"\r\n      />\r\n\r\n      {/* Questions */}\r\n      {questions.map((question, questionIndex) => (\r\n        <div key={questionIndex} className=\"mb-6 border p-4 rounded\">\r\n          <h3 className=\"font-semibold\">Question {questionIndex + 1}</h3>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Question Text\"\r\n            value={question.text}\r\n            onChange={(e) =>\r\n              handleQuestionChange(questionIndex, 'text', e.target.value)\r\n            }\r\n            className=\"border p-2 w-full mb-4\"\r\n          />\r\n\r\n          {/* Options */}\r\n          {question.options.map((option, optionIndex) => (\r\n            <div key={optionIndex} className=\"mb-2\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder={`Option ${optionIndex + 1}`}\r\n                value={option}\r\n                onChange={(e) =>\r\n                  handleOptionChange(questionIndex, optionIndex, e.target.value)\r\n                }\r\n                className=\"border p-2 w-full\"\r\n              />\r\n            </div>\r\n          ))}\r\n\r\n          {/* Correct Answer */}\r\n          <label className=\"block font-semibold mt-4\">\r\n            Correct Answer (0-based index):\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0\"\r\n            max=\"3\"\r\n            value={question.correctAnswer}\r\n            onChange={(e) =>\r\n              handleQuestionChange(questionIndex, 'correctAnswer', e.target.value)\r\n            }\r\n            className=\"border p-2 w-full\"\r\n          />\r\n\r\n          {/* Remove Question Button */}\r\n          <button\r\n            onClick={() => removeQuestion(questionIndex)}\r\n            className=\"bg-red-500 text-white px-4 py-2 mt-4 rounded\"\r\n          >\r\n            Remove Question\r\n          </button>\r\n        </div>\r\n      ))}\r\n\r\n      {/* Add Question Button */}\r\n      <button\r\n        onClick={addQuestion}\r\n        className=\"bg-blue-500 text-white px-4 py-2 rounded mb-6\"\r\n      >\r\n        Add Question\r\n      </button>\r\n\r\n      {/* Submit Quiz Button */}\r\n      <button\r\n        onClick={createQuiz}\r\n        className=\"bg-green-500 text-white px-4 py-2 rounded w-full\"\r\n      >\r\n        Create Quiz\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateQuiz;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}